{"sentence": "10 years in the career and at an Assoc. Director level and I’m constantly learning new things. It’s part of the job. Adversaries are always coming up with new ways to break into/compromise systems. You’ll never reach a point where you sit back and say, “I’ve learned everything.” The fact that you feel the way that you do is a great sign of ambition and telling that you’re a team player.7-zip CVE-2022–29072 never made it to be one of the most critical exploits, but it certainly got to be one of the hottest ones that generated many discussions. At first, it appeared to be a critical vulnerability that was believed to give adversaries system privileges and, as a result, could lead to system compromise.After this situation, I started to ask myself some questions. What is the real issue? No (or close to that) fact-checking culture in the industry? Too fast-evolving vulnerability landscape? Financial reasons? Or the never-stopping race with the adversaries? Honestly, the more questions appear, the fewer answers I have.\"Though the SolarWinds activity was remarkable for its stealth and discipline, loud, broad spearphishing operations were once the calling card of SVR operators who often carried out noisy phishing campaigns,\" John Hultquist, Vice President of Analysis at FireEye-owned Mandiant Threat Intelligence, said in an email. \"Those operations were often effective, gaining access to major government offices among other targets. And while the spear phishing emails were quickly identified, we expect that any post-compromise actions by these actors would be highly skilled and stealthy.\"When a target clicked on the Reports file, it opened the PDF as a decoy and in the background executed the DLL file. The DLL, in turn, installed the NativeZone backdoor. A separate post published by the Microsoft Threat Intelligence Center, or MSTIC, said the backdoor allowed Nobelium to achieve persistent access to compromised machines so the group could “conduct action-on objectives, such as lateral movement, data exfiltration, and delivery of additional malware.”Tuesday’s attack was just the latest wave of what MSTIC said was a widespread malicious spam campaign that started in late January. Since then, the campaign has evolved in a series of iterations that have demonstrated “significant experimentation.”When Microsoft first saw the campaign, it was hosting the ISO on Firebase, a Google-owned cloud platform for mobile and Web apps. During this early iteration, Microsoft said, the ISO image contained no malicious payload, leading company researchers to conclude the purpose was to “record attributes of those who accessed the URL.” In a later phase, the campaign sent emails that contained an HTML file. When opened, JavaScript wrote an ISO image to disc and encouraged the target to open it.Nobelium continued to experiment with multiple variations. In one wave, no ISO payload was delivered at all. Instead, a Nobelium-controlled web server profiled the target device. In the event the targeted device was an iPhone or iPad, a server delivered what was then a zero-day exploit for CVE-2021-1879, an iOS vulnerability that allowed hackers to deliver a universal cross-site scripting attack. Apple patched the zero-day in late March.“Microsoft security researchers assess that the Nobelium’s spear-phishing operations are recurring and have increased in frequency and scope,” the MSTC post concluded. “It is anticipated that additional activity may be carried out by the group using an evolving set of tactics.”“A vulnerability in the cluster database API of Cisco Expressway Series and Cisco TelePresence VCS could allow an authenticated, remote attacker with Administrator read-write privileges on the application to conduct absolute path traversal attacks on an affected device and overwrite files on the underlying operating system as a root user,” read the advisory.“This vulnerability is due to improper certificate validation. An attacker could exploit this vulnerability by using a man-in-the-middle technique to intercept the traffic between devices and then using a crafted certificate to impersonate the endpoint,” Cisco wrote.“An attacker could exploit this vulnerability by authenticating to the system as an administrative read-write user and submitting crafted input to the affected command.”\n\nA successful exploit could then allow the attacker to overwrite arbitrary files on the underlying operating system as the root user.\n\nCisco also addressed the Expressway Series and Cisco TelePresence VCS Null Byte Poisoning Vulnerability (CVE-2022-20813), which has a CVSS Base Score of 7.4.\n\nA vulnerability in the certificate validation of the Cisco Expressway Series and Cisco TelePresence VCS, this flaw could allow an unauthenticated, remote attacker to gain unauthorized access to sensitive data.“After initial access, a loader is downloaded,” explained the security experts. “This loader evades detection by clearing log files and disabling cloud monitoring and security tools. Tamper protection capabilities in Microsoft Defender for Endpoint help protect security settings.” \n\nThe loader would then download the pwnRig crpytominer and an IRC bot that runs commands from a  command-and-control (C2) server. It would then maintain persistence by creating either a cronjob or a script running every 60 seconds as nohup.\n\nAccording to Microsoft, the malware also features self-propagating capabilities.“The loader uses the IP port scanner tool ‘masscan’ to find other SSH servers in the network and then uses the GoLang-based SSH brute force tool ‘spirit’ to propagate. It also scans the local disk for SSH keys to move laterally by connecting to known hosts.”\n\nTo protect networks against this threat, Microsoft said organizations should secure systems and servers, apply updates, and use good credential hygiene. \n\n“Microsoft Defender for Endpoint on Linux detects malicious behaviors and payloads related to this campaign.”I would recommend Office files... and then use a macro to run an exploit or maybe take a look at CVE-2022-30190... it wont work on OSX because it uses ms-msdt protocol but you may be able to use something similar to get your exploit on the target. Sadly I'm not an expert on exploiting OSX so you may have to figure something out yourself. If you know which OSX version the victim is running you may be able to find some vulnerabilities for the specific version.\nI could get one of my own keyloggers and test if it runs smoothly on OSX if you want to. If it really has to be a full rootkit you may just look into Metasploit and find something that works for your purposes.\n\nAnd yes the victim CAN do a lot to get rid of it... Every antivirus can put the program into quarantine or remove it entirely from the system or the victim may take a look into taskmanager and then stops the program or restarts their device which is enough if you haven't build a good persistence. (While researching for your issue I found a very nice paper about MacOS malware persistence. PM me if you want to read it)\n\nAnd please make sure you take steps to prevent them from knowing your identity, use TOR routing and a no log VPN for traffic maybe even an own server in some country in Asia and don't use your personal email to send the attachment. LE will easily find you during investigation. So please take all necessary steps to remain undetectable.Malware typically only starts executing when it is executed by the user, there are exceptions though (zero-click exploits don't require any user action for instance). Malware can spread around a network, however it would find an attack surface, in order to spread to other devices. If you believe your computer has been infected, I suggest you completely wipe it, as this is the only way to be absolutely sure it is clean. Also wipe any USB or disk you had connected after/during the infection. There is no way to be sure you have been infected though. If a malware is crafted carefully, it will not reveal itself to the user, in fact that's the goal./u/SV2MG what are these exploits? i've found a couple of papers from cybersecurity researchers where they were able to deanonymize some users, but they are from several years ago. I2P has regular updates to try to fix those issues, plus i have I2P on a workstation that is funneled through a Whonix gateway, so even if i am a victim of I2P deanonymization, the adversary would have to then go through tor to get to me.\n\nLokinet is pretty cool too, i haven't played with it at all yet but from what i have read, its clear to me that its the next step in evolution Tor should go. Onion routing certainly powerful, and it being more decentralized than Tor/allows UDP traffic is a huge plus. But in my opinion garlic routing is superior to onion routing. If every Tor user switched to I2P and used Tor as a backup like i do, we're almost unstoppable.\n\nFreenet is also super interesting as a dark net. Its such a shame its not a fraction as popular I2P, but the routing protocol they use along with the utter and complete decentralized nature is honestly perfect.I don't want to bash Linux, so I'll say that it's great for not gathering analytics and being highly customizable, but it's not so great for security.\nI disagree, just because a system doesn't treat you like a kid and have a popup every time a suspicious file comes up or doesnt do extensive damage control for malware doesn't mean it isn't secure. If the user is competent, Linux is fairly secure, but I concede GrapheneOS is the most secure OS.So, the thing about hosting your own Tor bridge on a VPS or some other form of data host is that all the traffic you would pass through the host's infrastructure that they would in-theory be able to sell or otherwise exploit would be torified, meaning that it would in its entirety be both private and anonymous from their perspective. That's not to say though that there couldn't be valuable metadata that could be gleaned from your traffic by the hosting provider that could be of value to a sophisticated, dedicated adversary, such as the time that certain connections happened and the quantity of data passing through the node at given intervals.\n\n However, this would be the sort of stuff that would only pose much threat against you when in the hands of someone who already had honed-in on you specifically as a suspect and was performing targeted, sophisticated analysis on your traffic.The possibility of reversing the C&C connection itself is dependent on the\nprotocol implementation, as ultimately you would have to exploit the protocol\nitself to be able to use it to gain access.\n\nThis is more likely than it might seem because many bot masters end up rolling\ntheir own netcode, or using toolkits that do the same, and are riddled with\nbugs.\n\n\nOften the easiest way to gain access to the server is the same way you would\naccess any server, a broken and or insecure remote access setup. Scan the\nserver (if the botmaster has any skill whatsoever this will raise alarms),\nfind a vulnerable service (outdated web server, shitty ssh config, etc..), and\nif you manage to get in, be prepared to extract as much data as you can while\nthe other guys scramble to lock you out and shutdown the server.\n\n\nI would also have honeypot / container checks at the ready before you attempt\nexfiltration.Im looking for a few ways to spread from an android virus to windows and iot on lan, was thinking adding older exploits like eternalblue, as well as terminal services bluekeep. Password reuse and spraying might help, by collecting the wifi password, and any other stored passwords from device. Active domain looks like another possibility, still researching this. Network interfaces are known in the past to be running at system level, these might be good to check too.Mozilla has released security updates for multiple products to address zero-day vulnerabilities exploited during the Pwn2Own Vancouver 2022 hacking contest. \n\nIf exploited, the two critical flaws can let attackers gain JavaScript code execution on mobile and desktop devices running vulnerable versions of Firefox, Firefox ESR, Firefox for Android, and Thunderbird.\n\nThe zero-days have been fixed in Firefox 100.0.2, Firefox ESR 91.9.1, Firefox for Android 100.3, and Thunderbird 91.9.1.The first vulnerability is a prototype pollution in Top-Level Await implementation (tracked as CVE-2022-1802) that can let an attacker corrupt the methods of an Array object in JavaScript using prototype pollution to achieve JavaScript code execution in a privileged context.\n\nThe second one (CVE-2022-1529) allows attackers to abuse Java object indexing improper input validation in prototype pollution injection attacks.\n\n\n\"An attacker could have sent a message to the parent process where the contents were used to double-index into a JavaScript object, leading to prototype pollution and ultimately attacker-controlled JavaScript executing in the privileged parent process,\" Mozilla explained.\n\"An attacker could have sent a message to the parent process where the contents were used to double-index into a JavaScript object, leading to prototype pollution and ultimately attacker-controlled JavaScript executing in the privileged parent process,\" Mozilla explained.The Cybersecurity and Infrastructure Security Agency (CISA) also encouraged admins and users on Monday to patch these security flaws, given that threat actors could exploit them to \"take control of an affected system.\"\n\nMozilla patched these vulnerabilities two days after they were exploited and reported at the Pwn2Own hacking contest by Manfred Paul.\n\n\nHowever, vendors don't usually hurry to release patches after Pwn2Own since they have 90 days to push security fixes until Trend Micro's Zero Day Initiative publicly discloses them.you have to understand the people who run these markets are way smarter than us, they are masters of cryptography, use the API's and various programming ,languages to get a whole lot of disparate systems communicating with one another. then if the market is big enough have engage in arcane networking arts like load balancing, ssh/unix commands/firewalls/raw networking traffic analysis to defend against ddos, shell scripting (without introducing a bug that could render the entire system vulnerable to remote exploitation.The exploit is extremely simple but compromising. It allows for full access to the underlining file system on the server. This include information within the /etc/ directory as well as wallet directories. It is a full information compromise of the system. Everything to the server's IP address, to the backup of the database in the admin home folder, to the wallet files themselves. I am able to traverse nearly the entire file system with web server level access. There is no jail, WAF, and minimal care to limit the information disclosure in the event of a web server compromise. I am able to view the history of IP addresses which have previously accessed the server.what kind of malware are you looking for ? most people i think are looking for wrong thing when thinking at malware. They think all you need is malware and crypter lol but you will also need a good loader, or rootkit, before thinking about your malware. Then you need a good exploit or vector, to get the malware onto the device. Not exactly simple, but if you have the coin, i would look at getting a custom job lot thats loader and malware, and dont think because virus total dont see your bot, that defender wont notice them API calls that are unneeded and look a bit shakey .... QUARANTINED.the ransomware will usually encrypt all files that are worth it automatically (skipping exe and dll files because they are heavy for encryption and usually have no worth). Difference is that in a corporate environment you need to propagate the ransomware to multiple machines which might be more difficult than in regular networks - there are security devices in corporate networks that analyze network traffic and can detect security incidents.He could be using Snapchat to deliver some type payload (e.g. reverse shell, Remote Access Trojan), most likely he does social engineering to draw in the user to execute whatever code he sends. It could be an app loaded with a malicious code, or any other available remote code execution iOS/Android exploit.There is another possible explanation. If you're running Windows, you might have deposit address-changing malware on your computer. That malware changes the deposit address when you paste it into the transfer window of your xmr or btc client. If so, you've been phished and in a most unpleasant manner.Are you looking for a malware bot that spreads with a worm or just a spam bot, ect? You have to do serious social engineering to get the user to be infected because of the multi-user design of Linux. In order to run malicious code you typically need to have administrative privileges when your payload is executed in order to do anything harmful. Also you must keep in mind its open source community supported software, if there are any other attack vectors discovered the community tends to create a fix ASAP.\n\n The code to run the bot in the background should work the same, but finding a working attack vector to infect target machines is your biggest challenge. Linux users also tend to be more tech savvy and more likely to have most recent update and also have much less of the market share of average users. You'd be much better off targeting Windows users.Contrary to what many might be inclined to suspect, publicly accessible Tor bridges were only ever designed with the intent in mind to attempt the evasion of Tor entry guard blocking and blacklisting by blanketing, unsophisticated network-wide firewall mechanisms. They were never intended, as many believe, to securely hide the use of Tor from a sophisticated actor performing targeted eavesdropping on specific traffic with the goal in-mind of identifying probable Tor traffic. \n\nThe nuances to this distinction are important to understand. The reality is, for Tor users who aren't connecting through a network that censors Tor traffic, using public bridges actually doesn't provide any added level of anonymity or security to one's connection, and may actually come with added risks. This is due to the fact that by necessity of design, bridges are unable to receive the same level of auditing and oversight that the major public guard nodes are subject to.One of the most potent attack vectors on Tor's anonymity continues to be the correlation of network entrance and exit traffic by an adversary that is able to control both ends of the network that one's traffic is passing through. With this in consideration, its plausible to suspect that threat actors seeking to operate large amounts of poisoned entrance and exit nodes for the purpose of attempting this attack would consider running public bridges to be a particularly fruitful effort, given their necessary level of non-disclosure of information so as to avoid having their IP addresses being blacklisted to Tor-censoring firewall mechanisms. \n\nHowever, there are very compelling arguments that can be made as to the benefits of hosting your own private, dedicated obfuscated bridges on offshore data hosts such as a VPS. If attempting this, however, great care must be taken for paying and corresponding with hosting providers with a high degree of anonymity, as well as for determining a suitable provider to entrust with your non-anonymized client IP address that must be routed directly through their own network so as to enter Tor and anonymize the traffic from there on.You should look up exploits and exploit scanners as a priority. You don't need Javascript - you're not gonna make websites, this is only good if you're making phishing websites or drive-by download pages. Python is very easy to learn and is good for automation and exploiting. You can also focus on bruteforcing VN/RDP/VPN and other similar protocols.When it comes to ransomware, it's critical to know the details behind cryptography - if you're not 100% sure in encryption algorithms - you shouldn't be coding a ransomware. This is why a lot of groups had their ransomware getting decrypted - they used very bad custom algorithms or insecure modes of standard algorithms, which allowed companies to make free decryption software, which totally kills the profits, since victims usually search if the ransomware is decryptable first thing when they see the results of an attack.You might think, well I'll just fire up my VPN software to hide my real IP from the malicious entry node. But keep in mind that your OS and the apps running on your PC in the background are communicating with their servers all the time. So if some 3-letter agency with subpoena power is running those malicious entry and exit nodes, they can just say, \"hey Microsoft/Google/Apple/Facebook/Twitter/Dropbox, we've got a VPN IP address we're interested in. \n\nWhat other services did that IP address connect to at this specific time on this specific day? If while you were up to your TOR shenanigans, your VPN IP connected to your iCloud, your Gmail, your OneDrive, your social media, or anything else like that, they gotcha.HTTP. FTP. DNS, HTTPS, NTP are all application layer protocols and can all take you out maliciously. A mobile hotspot takes a cellular phone connection and transmit it into radio waves for WiFi -- that's all. Your last sentence -- that's only one of several ways of deanoymizing someone and one of the most rare. Using a cellular backbone is giving it away enough.Enabling javascript could subject you to Tor browser exploits, fingerprinting attacks or even hardware exploits like Spectre. For these attacks to work you only need to enable javascript and then visit a site that has malicious javascript. A problem with web security is that the javascript served by a site can change without warning, so even if a site is safe one second it can be malicious the next. To be safer, you could try running the protonmail web client locally so that the javascript remains constant, except for when you explicitly run an update.Windows has built in programs that are enabled by default track what you do and send reports to Microsoft. Even if you disable them there is still the possibility it tracks you in the background anyway because it is a proprietary software. Also, Windows is much less secure because of the way it is designed compared to Unix-based systems like Linux distributions (you can Google why yourself if you are interested, but from the sound of things you don't come across as a techy so I won't bore you with details). \n\nIt is much easier for your computer to be infected by malware on a Windows PC. On a Linux computer such as Ubuntu you'll get prompted to enter your password if any program tries to execute any malicious commands which will be a big red flag. As of 2018 there are no widespread examples of malware on Linux such as those seen on Windows machines.It works by forcing your client to join malicious guard nodes that it normally wouldn't. These malicious guard nodes don't form a circuit (identifying and fingerprintable) and are controlled by the adversary. They drop off almost immediately after your client joins them, so most people wouldn't even notice it's happening. You have to connect to a server that the adversary controls for them to hit you with this NIT. That's all I know at this point (and I could be wrong about you having to connect to a malicious server for this to work, there might be other ways to deploy/deliver the NIT to the client). If anyone is going to look at the source code to try and find this, I'd focus on any parts of the code that deal with how the client chooses/connects to guards\"Electrum in Tails cannot connect anymore to Electrum servers.\n\nThe version of Electrum in Tails is vulnerable to a phishing attack that tricks people in updating to a malicious version of Electrum which is not distributed from the official Electrum website.\n\nYou are safe unless you try to do the malicious update manually.\n\nTo prevent this phishing attack, all trustworthy Electrum servers now prevent older versions from connecting to them.\n\nUnfortunately, newer versions of Electrum are not available in Debian and cannot be integrated easily in Tails. Given the lack of maintenance of Electrum in Debian, we are still assessing what is best to do in Tails.\n\nUntil then, your wallet is not lost and you can restore it from its seed using an up-to-date version of Electrum outside of Tails.\"It also should be said that there is a form of attack called a sniper attack where a hidden service is dos with the purpose of forcing the hidden service to reconnect to another guard. An adversary would do this with hopes of the hidden service connecting to a malicious guard that it controls to de-anon the server. There is also another deanon technique that exploits a flaw in being able to predict hsdir selection. It was pretty trivial for someone to predict and position themselves to be a particular hidden service's hsdir and controlling these allows for traffic analysis to the hidden service. The next gen hidden services implementation improves this greatly and makes this attack much more difficult to perform.There are three primary classes of DDoS attacks – those that use massive amounts of bogus traffic to down a resource such as a website or server, including ICMP, UDP, and spoof-packet flood attacks. Another class of DDoS attack uses packets to target the network infrastructure and infrastructure management tools. These protocol attacks include SYN Floods and Smurf DDoS, among others. Finally, some DDoS attacks target an organization’s application layer and are conducted by flooding applications with maliciously crafted requests. The goal is always the same: make online resources sluggish or completely unresponsive.Looks like some weird kind of weak command injection attempt, I don't think you have to worry with snapchat, if they were vulnerable to injection attacks via their messages then a white hat would've claimed a CVE on it almost immediately and it would be patched. Besides, a command injection would more likely compromise snapchat servers and then they'll probably be stuck in a virtualised machine, not your friends device. Unless someone is trying to open a backdoor on their device via snapchat which would be strange but hackers do try everything.\n\nGet them to do a virus scan if you're concerned, but I don't think you have to worry about this, especially if the virus scan comes back all cleanThis logs software on your computer to assist in identifying compatibility issues. It's probably chill and most likely helps Microsoft improve software compatibility, but you may not want a list of installed programs collected from your computer.\n\n\nOpen regedit. Navigate to 'HKEY_LOCAL_MACHINE/SOFTWARE/Policies/Microsoft/Windows'. Look for the AppCompat key, it should be above 'Appx'. If it's not there, create new key in Windows, name 'AppCompat'. Within AppCompat key, find or create 'DisableInventory' DWORD and set the value to 1.TRUST ME, no one can do that. You'd have to have someone on the inside who knows the systems do it for you. Because most stuff that has to do with grades and all that is going to be on the school's intranet (internal network access, no external access allowed) as opposed to being out and open on the internet.\n\n\nBut, just saying it was, that person would have to figure out if your server is running egnix/Apache/MySQL and then find a zero or close to zero day exploit for that software and then exploit it to get access to the entire school's database. You could make it simple for them by giving them your username and password to login, but most schools are going to be firewalled so that people outside the school can't access their systems. But, then they would have to run a brute force or rainbow tablets on the root/admin account which might take weeks or longer depending on how good their password is.\n\nfter that, more than likely they would have admin/root access just to your school's public facing website, and not access to change grades.\n\nYou could maybe run a squid proxy to allow someone outside of your school's network to login and take a look around with your username and password, but all that school software is proprietary and not very many people are going to know how to hack itI also had a suggestion to run a TCP traceroute, which theoretically should work the same way as a tcp ping. I found a guy trying to write one on stackoverflow using scapy and he had the basic code working it looked like, it just didn't have the verbose output he wanted.If you are on Windows this a much more significant risk since OSCP verification is required for each application and signature of a HTTP/HTTPS request through the system. If you are using Windows this will attack WINHTTP storage. Certificates are used to sign most websites you visit and the applications requesting updates to assure thy are legitimate. Meaning an IP can acquire access by verifying that illegitimate certificate and download spyware or malware. The solution is controlling your exit node with trusted nodes TCP over-lay. Isolating your session is most important that's why Qubes always win.There are multiple types of proxies. The best way of understanding which does what is to understand the relationship they share to different protocols. HTTP proxies and HTTPS proxies are commonly known as \"web proxies\". A remote host functions as a proxy server between you and internet traffic sent over ports 80/443 (Unencrypted/Encrypted with SSL). These are a common choice for web scraping and other applications requiring a large volume of web requests (see: backconnecting proxies). SOCKS 4 and SOCKS 5 offer a more robust solution capable of transmitting other services through the server. \n\nThe only difference being SOCKS 5 supports all TCP and UDP packets whereas SOCKS 4 can only process TCP. A good example of a service requiring UDP would be SIP/SAP and VoIP/(s)RTP since use of TCP would result in bottlenecking. Other TCP services would include SMTP, Telnet, SSH, so on. SOCKS proxies do NOT provide the end user with any enhanced security as there is no encryption standard. Additionally, proxies can prove to be problematic if the connection has a high latency response time, MTU response that doesn't match, or has been flagged in proprietary black lists.You could use that open port to connect and upload a loader in a \"hard to find\" directory or in plain site like System32 in Windows which most people won't know what each folder and program is thru protocols such as scp, SMB, FTP and so on. Malicious scripts in Task Scheduler for maintaining access thru remote comms, silently disabling security/whitelist to allow RATs, create a hidden user for RDP backdoorseach bot has a module for scanning open ports on IPv4 hosts (can use different scanning methods, mostly stealth scan is used) with TCP protocol and a large number of threads. The botnet server usually assigns ip ranges for each bot to scan and they return the results back to the server. Also usually the server has a built in black list for IP ranges - so it avoids honeypots, DoD ranges and similar sensitive ones. Additionally bots can detect a protocol based on the response they get after connecting to the IP address and port (since administrators usually select an alternative port for services - so they don't get easily detected), but in order to do this you have to do a full TCP scan and not stealth.\n\nIt is not difficult to scan the entire Internet, UDP scans do take a longer time, but mostly TCP scans are used, since most important protocols use it. With 100 hosts with decent throughput, you can manage to scan the entire Internet in a few hours.The problem is then you have to select your targets very carefully. If you are just scanning random IPs hoping for a n-day exploit or easily crackable SSH/Telnet ports it is most likely that you are going to hit a honeypot instead of a real target. This is how AV companies find, reverse engineer and fingerprint malware and also most security researchers run honeypots hoping to catch yet another stuxnet so they can write a shiny blog post about it and become famous and get all the business opportunities coming their way.Go into your /etc/sysctl.conf on Kubuntu and make sure your settings for IPV4/IPV6 forwarding are set to 0 and uncommented.\nLock down your /bin/bash, /etc/sudoers with chmod.\n\nYou can set up a bridged connection that basically cuts off connection to your host and only have connection through the VM (Whonix Gateway) I forget the settings but you can specifically search for that. Firewall all connections that aren't virtualbox on your host machine,look into OpenVPN for your router. That's the only place your VPN should be placed and your setup should be fairly securedYour OS would help. In linux you can normally just run chmod on its /dev directory. Destroy the data first though. If you run fdisk -l and find its name on the mount table, for example say its sdb, then you can run:\n\n$sudo shred -vzf /dev/sdb && sudo chmod 777 /dev/sdbI noticed that the symlink to \"prefs.js\" in \"/home/amnesia/.tor-browser/profile.default/\" pointing to the persistent \"dotfiles\" is replaced by an actual file at first launch of the Tor Browser.It really depends on the make and model. Routers, firewalls, switches, and VPNs are frequently not patched that much, and hang around forever being vulnerable. What you can do also depends on the make and quality of the networking equipment. I've found over the years that the most common useful thing you can do with a hacked router is try to get passwords out of it's config file.\n\n\nThe quality of the CLIs varies heavily. Most of them aren't super useful as hacking platforms. With Ciscos you're basically stuck with really basic networking tools like telnet and ping. About the only other thing you can do is try to setup an ipsec tunnel into the target network but if you do it wrong you'll probably fuck everything up and also people really notice when Ciscos stop working.\n\nJunipers don't have a lot of vulnerabilities but they're actually sort of normal BSD boxes running networking software. If you compromise one it'd probably be pretty useful but the only one''s I've used are ones that I'm supposed to be using. Everything running junOS has all sorts of cool features that aren't being used.XSS will only execute code on other users' browsers. An XSS vuln has nothing to do with the site itself. Play with tools like nmap, sqlmap, nikto and nessus. The first step in hacking is recon. NEVER move onto the next step until you are sure you have enough wiggle room to dig deeper. Organize a folder with a list of everything you found and keep knocking on doors until you find something that catches your eye.\n\nA reverse shell is exactly what it sounds like. Think about that. You want the target to connect back to YOU, and give you CLI access when the connection is established. So to get a reverse shell, you need to have file-transfer permissions. you are usually able to transfer files over protocols such as Telnet, SSH, SMB, or even just a raw socket.\n\n\nSo tools you will probably need for file transfer (to get the reverse shell at all, assuming you have established communication with the server in some way) are: smbclient, telnet, openssh and netcat/socat.With larger, more mainstream, and more secure software packages, the data in these packets is more likely to be encrypted. It also may not be cleartext. It may be binary data such as images, videos, etc. Wireshark has lots of little scripts and capabilities that parse a lot of the more well known packet types. That can help with looking through stuff. Also remember that packets have a maximum possible size. So if the data being sent is really large, it will be split across a bunch of packets. You may not be able to make sense of one packet, but if you can assemble the data of all of them, then it would make more sense.If you done it wrong, you will leak out some packets out away from the VPN. WebRTC, DNS leak. VPN clients will tweak your routing tables. When messing with routing tables, this is where it gets wrong.\n\n\nI just get VPS hosting that accepts monero and no KYC install my private obfs4 bridge tunnel through 443 SSL port.\n\nYour ISP if they are not looking deep enough will think you are just surfing SSL sites but of course they can differentiate TOR packets that tunnel through 443 and normal SSL packets, if they really look deep.I recommend starting a botnet (loader), using a rat / reverse socks proxy on the client to use their IP to login, and a stealer to load cookies (to browse other sites and look through their email etc..) / grep for accounts which you need.The plan is to start it out as a DDoS botnet, since sending packets towards directed targets in the background, I feel, would be the easiest \"test case\" in creating an initial botnet. Then deploy an update across the botnet to have it begin doing new tasks. Botnet for mining XMR, keylogging bank details, etc. Then either rent out the botnet or sell the controller off to someone else, depending on if I want to keep it after getting it to a decent point, or if I want to cash out to avoid drawing attention to myself in the long term. Windows would probably be my direct target, since that's so widespread with so many vulnerabilities. Plus, if IoT isn't some hacking term that means something other than \"Internet of Things\", don't wanna risk putting something out there with a chance to turn physically harmful, rather than mechanically.look into evilgrade and dns spoofing, then send a rogue SMS to either interact with the GSM modem, injecting AT commands to add the dns server, or simjack. This can be done through sending PDU based SMS's, i have been reading up on this after finding some posts on dread mentioning it. Its not hard to do, and there are scripts available on google to do this, the SIMJACKER bit might get complicated, but if anyone wants to know more, im not cheap but i can help.Depending on the target you hit, if it's a giant, be sure they have Intrusion Detection Systems in place. They do packet analysis on the spot. If it looks suspicious it'll fail. Especially with major corporations. There are devices that come before the load balancer that detect your packet and if it doesn't look like its going for destination port, destination source 443 then it's a no go. Using deep packet inspection they can find anomalies that will tell them inside this encrypted packet is another encrypted packet so either your MTU is too large and you get fragmentation or it's too small and it triggers a VPN sizing down each packet below 1500 MTU. It really boils down to who you're up against and the sophistication of the countermeasures. Going after, for example, AWS -- their reverse proxies will see you coming a mile away and drop you at the door.An RDP is just a hacked computer you can control (RDP stands for Remote Desktop Protocol.) The reason people specify to use a hacked one is because a lot of people sell cheap RDPs that are really VMs on Amazon AWS or something like that, those do not give you the same benefits that a real hacked RDP does for carding.You have to have access to gpedit.msc (meaning you will need Windows Pro). You must be familiar with the registry entirely and Window's advanced firewall and have firewall knowledge in general.\n\nYou must be extremely familiar with C : \\ Windows \\ System32. And completely understand privileges and ACL in Windows.\n\nThen you would be able to completely disable telemetry. Become the owner of key files that are currently run as services. Block the host from leaking anything at all.\n\n\nUnfortunately, a post won't do it. It involves labor (time) and technical familiarity but it is completely possible. It's just that very few people invest time doing to Windows what is standard to Linux distributions and Windows developers don't care about telemetry because they busy using AWS containers.I found the malware executes by memory to not be detected, the email sent was a trick because scanning in sandbox contains tons DLL injecting malware. The IP used has been everywhere and is sighted as Operation See Through Glass a NSA PRISM program affiliate considering the IPs have been facebook, amazon AWS, ATT, Verizon. the way I figured they are able to bypass things including port closing is they're using DNS hijacking.That's not a trouble but the only sane thing it can do. In theory, HTTP can \"Upgrade\" to TLS since 1.1, but that isn't deployed in the wild, instead HTTPS on a separate port is used. Well-configured servers already use HSTS et al to make sure clients use HTTPS whenever possible. The extension is just there to a) avoid the initial unencrypted request that the client would need to learn about HSTS and b) help with sites that don't use it correctly.For Windows & Mac OS, they are both closed-source operating systems and we have no idea what kind of backdoors are in the source code. So we can't really say for sure whether a file is really deleted or stored indefinitely in Microsoft & Apple servers, they could have a copy of every file you have although that's unlikely.However, against a very skilled adversary with unlimited resources such as the US government, many things are possible. They could run a \"cold boot attack\" and be able to recover the files from the HDD depending on the situation. Although you'd have to be a big target for them to conduct such an attack.I agree, nothing is bulletproof. An adversary can compromise your network, Qubes is for users with understanding of cli in Debian, Whonix Or Fedora. Newcomers do need to start somewhere. It's great for multiple machine workstations, network access through multiple 'Qubes', having the ability to torrify the system with sys-whonix and config a sandbox session to your network-manager. if your session is compromised Qubes will protect you better than tails or any other live-boot OS. But Qubes does need good hardware to run on, it will still run fine on middle to average hardware requirements, it's like installing Windows to a USB and booting it from a USB. It makes no sense.GNU/Linux affords more privacy and security- Windows and MacOS are filled to the brim with spyware and backdoors. FDE is non-negotiable unless you wanna get locked up in the event that you get raided or your laptop gets snatched. Tails is good for browsing the dark web, making purchases, and handling crypto, but it isn't great for doing actual work. If you have never used GNU/Linux, then start with Ubuntu or possibly a lighter version like Lubuntu, because generic Ubuntu ships with a lot of unnecessary stuff.The installation is real easy, and it is probably the most user friendly. If you are going to use Ubuntu or some variant to do your work, I'd recommend installing it on an external SSD or flash drive and booting from it instead of your main OS. For encryption, use a long, high entropy mnemonic password- long strings of words are easier to remember and will survive a brute force and even dictionary attack so long as the passphrase is long enough. use a password tester online, and also throw in some symbols and numbers for higher entropy.If you have access to the GRSecurity Linux kernel patch-set, use it - it's main goal is preventing zero day exploits, and it comes with it's own MAC, which, if configured correctly, locks down application resource access to the bare minimum required while also hardening the kernel against a wide range of known and unknown exploit classes.Who's your adversary? Against a global adversary with unlimited resources more hops make passive attacks (slightly) harder but active attacks easier as you are providing more attack surface and send out more data that can be used. Against colluding Tor nodes you are safer, against blackhat hackers who target Tor client code you are safer (especially if Tor and VPN run on two different systems). If the VPN/SSH server is adversary controlled you weaken the protection provided by Tor. If the server is trustworthy you can increase the anonymity and/or privacy (depending on set up) provided by Tor.Whilst the ‘original’ Prilex ATM threat is thought have subsided, malicious samples detected as a variant of ‘Trojan/Win32.Prilex’ are still being observed, some with up-to-date compilation timestamps, albeit these appear to be structurally identical to the early threat developed in Microsoft Visual Basic 6. As such, and given both the high detection rate by antivirus solutions combined with the failure to update or protect the malicious binary through the use of either ‘cryptors’ or ‘packers’, it is hypothesized that these files do not pose a credible threat and may be as a result of old threats being traded on underground sites or security researcher activity.Goldbrute is only using RDP brute force to gain access to the Windows machine. This requires a valid username and password. No exploit is being used.\n\nBluekeep is a \"wormable\" remote code execution vulnerability. No username and password will be required to control the vulnerable machine. No researchers have released public exploits yet, one of them gave Rapid7 his module to be polished and added to Metasploit.\n\nArbitrary code execution gives control over the RDP machine with SYSTEM privileges. Until Metasploit releases the RCE module only private POC can hack the machines. However no public exploit has been observed yet.Tired of obfuscating strings and recompiling to break signatures? Wish you could keep PE-sieve from ripping your malware out of memory? Interested in learning how to do all of this with your existing COTS or private toolsets?\n\nFor years, reverse engineers and endpoint security software have used memory scanning to locate shellcode and malware implants in Windows memory. These tools rely on IOCs such as signatures and unbacked executable memory. This talk will dive into the various methods in which memory scanners search for these indicators and demonstrate a stable evasion technique for each method. A new position-independent reflective DLL loader, AceLdr, will be released alongside the presentation and features the demonstrated techniques to evade all of the previously described memory scanners. The presenter and their colleagues have used AceLdr on red team operations against mature security programs to avoid detection successfully.\n\n\nThis talk will focus on the internals of PE-sieve, MalMemDetect, Moneta, Volatility malfind, and YARA to understand how they find malware in memory and how malware can be modified to fly under their radar consistently.The hard outer shell of cyber defenses often give way to a soft, gooey and easy-to-exploit centre, but all the lateral movement and escalation techniques in the world, isn’t going to be worth anything if initial access cannot be secured. For threat actors and Red Teamer’s alike, getting over that initial hurdle can be a long, arduous task with little hope of success and phishing in particular is often the bane of any aspiring attacker. Between EDRs, email scanner solutions, payload fingerprinting… what do you do?Interestingly, I had him checked out and i get it! He is a total package, you interested in the cold war spying ? the pandemic lock down few years helped me with closure in my affair as we had to adopt new living methods…argh never mind, a mystery parcel I found...I’d recommend with such awesome Hack Oracle Application Server, that can recover password to email accounts, Facebook Hack, Phone Hacks, want to monitor your partner. You need to give this dude more encouragement !! services are not just confined to Website Takeover, Social Media Hacks, Database Hacks, Email Hacks, Phone and Gadget Hacks, change of grades, Location Tracking (Stealth Spying) or any other accounts that requires activation VERIFICATION code but other complex tailored services not listed in this message with respect for such low prices.cybilltritech AT protonmail DOT comTelling him greymatters sent you his info.It's software(malware) that monitors victims clipboard for crypto adresses and replaces with yours.\n\nAnd ?\nWhen victim is infected with this malware. When he/she wants to send crypto to somebody, he copies crypto address, and paste this into wallet and hit send.\nIn the background malware is replacing copied crypto address with yours. In that case you receive the crypto to your wallet.\n\nMore about software:\nFUD (Antivirus wont detect)\nSupports any crypto addreses.\n\nPrice 30$.\n\nP.S Don't ask me how to spread this software. There is many tutorials online about \"spreading\". And i'm not responsible for your blackhat actions ;)\nPeace ;)Cisco ASA and ASA-X are widely deployed firewalls that are relied upon to protect internal networks from the dangers of the outside world. This key piece of network infrastructure is an obvious point of attack, and a known target for exploitation and implantation by APT such as the Equation Group. Yet it’s been a number of years since a new vulnerability has been published that can provide privileged access to the ASA or the protected internal network. But all good things must come to an end.\n\nIn this talk, new vulnerabilities affecting the Cisco ASA will be presented. We’ll exploit the firewall, the system’s administrators, and the ASA-X FirePOWER module. The result of which should call into question the firewall’s trustworthiness.\n\nThe talk will focus on the practical exploitation of the ASA using these new vulnerabilities. To that end, new tooling and Metasploit modules will be presented. For IT protectors, mitigation and potential indicators of compromise will also be explored.These days, Programmable Logic Controllers (PLC) in an industrial network are a critical attack target, with more exploits being identified every day. But what if the PLC wasn’t the prey, but the predator? This presentation demonstrates a novel TTP called the \"Evil PLC Attack\", where a PLC is weaponized in a way that when an engineer is trying to configure or troubleshoot it, the engineer’s machine gets compromised.\n\nWe will describe how engineers diagnose PLC issues, write code, and transfer bytecode to PLCs for execution with industrial processes in any number of critical sectors, including electric, water and wastewater, heavy industry, and automotive manufacturing. Then we will describe how we conceptualized, developed, and implemented different techniques to weaponize a PLC in order to achieve code execution on an engineer’s machine. \n\nThe research resulted in working PoCs against ICS market leaders which fixed all the reported vulnerabilities and remediated the attack vector. Such vendors include Rockwell Automation, Schneider Electric, GE, B&R, Xinje, OVARRO and more.Windows 11 ships with a nifty feature called Power Automate, which lets users automate mundane processes. In a nutshell, Users can build custom processes and hand them to Microsoft, which in turn ensures they are distributed to all user machines or Office cloud, executed successfully and reports back to the cloud. You can probably already see where this is going..\n\nIn this presentation, we will show how Power Automate can be repurposed to power malware operations. We will demonstrate the full cycle of distributing payloads, bypassing perimeter controls, executing them on victim machines and exfiltrating data. All while using nothing but Windows baked-in and signed executables, and Office cloud services.\n\nWe will then take you behind the scenes and explore how this service works, what attack surface it exposes on the machine and in the cloud, and how it is enabled by-default and can be used without explicit user consent. We will also point out a few promising future research directions for the community to pursue.\nFinally, we will share an open-source command line tool to easily accomplish all of the above, so you will be able to add it into your Red Team arsenal and try out your own ideas.The Russia-Ukraine war has seen a lot of computer hacking, on both sides, by nations, haxor collectives, and random citizens, to steal, deny, alter, destroy, and amplify information. Satellite comms have gone down. Railway traffic has been stymied. Doxing is a weapon. Fake personas and false flags are expected. Every major platform has had issues with confidentiality, integrity, and availability. Hacked social media and TV have been a hall of mirrors and PSYOP. Russian comms are unreliable, so Ukrainian nets have become honeypots. \n\nHackers have been shot in the kneecaps. Talking heads have called for a RUNET shutdown. The Ukrainian government has appealed for hacker volunteers – just send your expertise, experience, and a reference. The Great Powers are hacking from afar, while defending their own critical infrastructure, including nuclear command-and-control. Ukraine has many hacker allies, while Russian hackers are fleeing their country in record numbers. Some lessons so far: connectivity is stronger than we thought, info ops are stealing the day, drones are the future, and it is always time for the next hack.Satellite designs are myriad as stars in the sky, but one common denominator across all modern missions is their dependency on long-radio radio links. In this briefing, we will turn a hacker’s eye towards the signals that are the lifeblood of space missions. We’ll learn how both state and non-state actors can, and have, executed physical-layer attacks on satellite communications systems and what their motivations have been for causing such disruption.\n\nBuilding on this foundation, we’ll present modern evolutions of these attack strategies which can threaten next-generation space missions. From jamming, to spoofing, to signal hijacking, we’ll see how radio links represent a key attack surface for space platforms and how technological developments make these attacks ever more accessible and affordable. We’ll simulate strategies attackers may use to cause disruption in key space communications links and even model attacks which may undermine critical safety controls involved in rocket launches.\n\nThe presentation will conclude with a discussion of strategies which can defend against many of these attacks.\n\nWhile this talk includes technical components, it is intended to be accessible to all audiences and does not assume any prior background in radio communications, astrodynamics, or aerospace engineering. The hope is to provide a launchpad for researchers across the security community to contribute to protecting critical infrastructure in space and beyond.Malware continues to advance in sophistication. Well-engineered malware can obfuscate itself from the user and the OS. Volatile memory is the unique structure malware cannot evade. I have engineered a new construct for memory analysis and a new open-source tool that automates memory analysis, correlation, and user-interaction to increase investigation accuracy, reduce analysis time and workload, and better detect malware presence from memory.\n\n This workshop introduces a new visualization construct that creates the ability to interact with memory analysis artifacts. We will cover how to conducted advanced memory analysis utilizing this brand new tool that will greatly enhance the analysis process. Additionally, we will learn how to use new Data XREF and System Manifest features in this workshop. Data XREF provides an index and memory context detailing how your search data is coupled with processes, modules, and events captured in memory. The System Manifest distills the analysis data to create a new memory analysis snapshot and precise identification of malicious artifacts detectable from malware execution especially useful for exploit dev and malware analysis! This talk is perfect if you have conducted memory analysis before and understand the pain it is to conduct this type of analysis by hand.\n\n In this workshop, we will work with a new revolutionary tool to automate, correlate, and enrich memory analysis saving you hours of analysis time. This work shop exposes participants to capture-the-flag memory analysis challenges utilizing the new Xavier Memory Analysis Framework and concludes with a culminating capstone exercise at the end. Participants will walk away with advanced memory analysis capabilities including how to recognize and handle various forms of advance code injection and rootkit hooking techniques from computer memory.Once the file is on the server, you will need to decompress it or we cheat and install midnight commander. To install MC use the following ‘sudo apt-get install mc’ and follow instructions. Now we can run ‘sudo mc’ to make sure we are running as r00t level and we can select the file, press enter and see the contents on the left screen. On the right screen look for /var /www /public_html or /srv/http. You can now copy the files into the folder.ok, first THINK about what you want, are you looking for ddos ? thats one type of bot, are you looking for logs ? thats another, are you preparing a BEC or APT attack ? thats another type of bot you need. Usually bots can be spread using spam and an exploit, or convincing someone to open a macro. But also you can hack the network and spread through domain or exploits on devices. You can also attack and install malware through bluetooth or wifi using various attacks such as broadpwn or blueborne which still work very well, the key with blueborne is to find the range of mem addresses used by that device, and fuzz each one until you get the right add, and then use that with blueborne. There are also other things you can do such as worms which can spread through a network like a plague.Macs are unix based, and the most polished OS you can use. If you know mac OS well, and know how to properly configure it, you can use Mac OS for anything safely. If you know any OS well enough, you can configure them to do anything safely."}